#!/usr/bin/env python
PACKAGE = "dino_nav"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("throttle",    int_t,    0, "Max throttle of the car", 15,  -100, 100)
gen.add("inflation",   int_t,    0, "radious of cells inflation", 3,  0, 10)
gen.add("grid_dim",    int_t,    0, "grid dimension", 100,  25, 1000)
gen.add("zoom",        double_t, 0, "float zoom", 3.8,  1, 10)
gen.add("ahead_offset",int_t,    0, "offset the car ahead(pixel)", 0,  0, 100)

gen.add("enable",      bool_t,   0, "enable the commands",  True)
gen.add("curve_safety", double_t, 0, "curve target speed (m/s)", 1.0,  0, 10)
gen.add("car_decel",   double_t, 0, "car deceleration (m/s^2)", 4,  0, 40)

gen.add("dist_from_center", double_t, 0, "Distance from the center of curve (1.0 is max)", 0.7, 0,   1)
gen.add("oversteer_left", double_t, 0, "oversteer value for left steer", 1.0, 0, 4)
gen.add("oversteer_right", double_t, 0, "oversteer value for right steer", 1.0, 0, 4)
gen.add("lidar_pos", double_t, 0, "lidar position", 0.0, 0, 1)


''''
gen.add("double_param", double_t, 0, "A double parameter",    .5, 0,   1)
gen.add("str_param",    str_t,    0, "A string parameter",  "Hello World")
gen.add("bool_param",   bool_t,   0, "A Boolean parameter",  True)

size_enum = gen.enum([ gen.const("Small",      int_t, 0, "A small constant"),
                       gen.const("Medium",     int_t, 1, "A medium constant"),
                       gen.const("Large",      int_t, 2, "A large constant"),
                       gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
                     "An enum to set size")

gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)
'''

exit(gen.generate(PACKAGE, "dynamic_dinonav", "Dinonav"))
